package hellojpa04;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;

public class Main {
    public static void main(String[] args) {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("hello");

        EntityManager em = emf.createEntityManager();
        EntityTransaction tx = em.getTransaction();
        tx.begin();
        try {
            /*
            //  Member 테이블 CREATE SQL을 미리 실행 시켜놓기
                create table member(
                    id bigint generated by default as identity,
                    name varchar(255),
                    primary key (id)
                );
             */

            Member member1 = new Member();
            member1.setUserName("A");

            Member member2 = new Member();
            member2.setUserName("A");

            Member member3 = new Member();
            member3.setUserName("A");

            System.out.println("=============================");

            em.persist(member1);    //50, 100
            em.persist(member2);    //MEM
            em.persist(member3);    //MEM

            System.out.println("member1.id = " + member1.getId());
            System.out.println("member2.id = " + member2.getId());
            System.out.println("member3.id = " + member3.getId());

            System.out.println("=============================");

            tx.commit();
        } catch (Exception e){
            e.printStackTrace();
            tx.rollback();
        } finally {
            em.close();
        }

        emf.close();
    }
}

//특징
//1. 테이블을 생성하여 사용하기 때문에 성능 이슈가 있음
//2. 중요한 속성인 initialValue, allocationSize 속성은 SEQUENCE 전략의 속성 내용과 같음

//[실행 결과 - 콘솔]
//Hibernate:
//    create table MY_SEQUENCES (
//        sequence_name varchar(255) not null,
//        next_val bigint,
//        primary key (sequence_name)
//    )
//Hibernate:
//    insert into MY_SEQUENCES(sequence_name, next_val) values ('MEMBER_SEQ',0)
//=============================
//Hibernate:
//    select
//        tbl.next_val
//    from
//        MY_SEQUENCES tbl
//    where
//        tbl.sequence_name=? for update
//
//Hibernate:
//    update
//        MY_SEQUENCES
//    set
//        next_val=?
//    where
//        next_val=?
//        and sequence_name=?
//Hibernate:
//    select
//        tbl.next_val
//    from
//        MY_SEQUENCES tbl
//    where
//        tbl.sequence_name=? for update
//
//Hibernate:
//    update
//        MY_SEQUENCES
//    set
//        next_val=?
//    where
//        next_val=?
//        and sequence_name=?
//member1.id = 1
//member2.id = 2
//member3.id = 3
//=============================
//Hibernate:
//    /* insert hellojpa04.Member
//         */ insert
//    into
//        Member
//        (name, id)
//    values
//        (?, ?)
//Hibernate:
//    /* insert hellojpa04.Member
//         */ insert
//    into
//        Member
//        (name, id)
//    values
//        (?, ?)
//Hibernate:
//    /* insert hellojpa04.Member
//          */ insert
//    into
//        Member
//        (name, id)
//    values
//        (?, ?)

//[실행 결과 - DB 테이블: MY_SEQUENCES ]
//SEQUENCE_NAME  	NEXT_VAL
//default	        100
